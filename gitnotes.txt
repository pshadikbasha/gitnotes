Folder 1: 
Git and github:
git is a distributed version control system. it tracks and manages every file in over the time. where github is a repository hoisting service that hosts all git hub repos in cloud to make collaborators work easy.

Folder 2: Is about installation of git software.
Folder 3: Basic shell commands
1. mkdir: to make new directories
2. pwd: print working directory
3. cd: to change the directory
4. ls : to show the contents in Folder
5. ls -al: to list out all hidden files
6. touch : to create new file
7. echo : to print content on the screen
8. nano : to edit the file
9. . : alias of current directory
10. .. : alias of parent directory
11. >: to create new file using echo commands
12. >> : to append content to file
13. clear: to clear the terminal
14. tab: for auto completing the commands
15. rm : to remove the Folder
16. explorer . : to open files in file explorer
17. cat: to read content of file.
18. rm -rf: to remove the folder using recurvie force.
19. git init: to initaliazie git repository in folder.
20. git hash-object: to create new blob in git repo
21. git cat-file: to read the git file
22. git mktree: to create new tree object.
24. git cat-file -p:to print the content of file
25. git cat-file -s: to print the size of the object
26. git cat-file -t: to print the type of the object. 
27. git read-tree: to read files from git repository
28. git checkout-index -a: to move files from staging area into working directory.
29. git ls-files -s: to show files in staging area.
30. git status: to see the files status.
31. git config --global user.name 'pshadikbasha'
32. git config --global user.email 'pshadikbahsa97@gmail.com'



section 4: How git works under the hood
1. basically we need to initaliazie the git repository.
to initalize git repository use git init command
Types of git object
1. Blob
2. Tree
3. commit 
4. annotated tag
   5[t218818`
git hash object command is used to make objects in .git folder. it uses key value pairs as to store the object.
echo "hello wolrd " | git hash-object --stdin -w
git will hashobject based on filealso.
git hash-object <filename> -w
git read-tree to read tree from git repository to staging area.
git read-tree <hash>
git checkout-index -a: to move files from staging area to working directory.

Folder 5: Basic git operations:
1. to make commits we need to configure username and email
git config --global user.name "pshadikbasha"
git config --global user.email 'pshadikbasha97@gmail.com'
git config --global --list

git add .: to add files to staging area.
git commit -m "to add message to"
git status: to see the status of files.
git checkout-index -a: to move files from staging area to working directory.
git ls-files -s: to see files in staging area.
git rm --cached file name: to remove from staging area and move back to working directory.

git branches:
git checkout -b "branchname"
git branch -d "branch name" to delte the branch
git branch -m old brnahc name new branch name
git merge command to merge branch
git clone "repository name"


